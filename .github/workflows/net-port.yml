# eslint workflows
name: Annotate PR with trunk issues

on:
  workflow_run:
    workflows: [Pull Request]
    types: [completed]

permissions: read-all

jobs:
  trunk_check:
    name: Trunk Check Annotate
    runs-on: ubuntu-latest

    permissions:
      checks: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Trunk Check
        uses: trunk-io/trunk-action@v1
        with:
          post-annotations: true # only for fork PRs
          # ci
          # For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"
on:
  push:
    branches: [main]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [main]
  schedule:
    - cron: '28 17 * * 5'
jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
        # Learn more:
        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main
    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    # ℹ️ Command-line programs to run using the OS shell.
    # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
    # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language
    #- run: |
    #   make bootstrap
    #   make release
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      # docs
      name: CI
on:
  push:
    branches: [main]
    paths:
        - 'docs/**'

  pull_request:
    branches: [main]
    paths:
        - 'docs/**'

permissions:
  contents: read

jobs:
  verify_files:
    name: Verify Docs Files
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'

    - name: Install Docs Packages
      working-directory: docs
      run: npm install

    - name: Install Packages
      run: npm install

    - name: Stylelint Docs
      working-directory: docs
      run: npm run lint:scss

    - name: Build Docs Website
      working-directory: docs
      run: npm run build

    - name: Validate internal links
      working-directory: docs
      run: npm run lint:links
      # build
      name: Rebuild Docs Sites
on:
  push:
    branches: [main]
    paths:
        - 'docs/src/_data/versions.json'
jobs:
  rebuild:
    name: 'Trigger rebuild on Netlify'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: >
          jq -r '.items | map(.branch) | join(",")' docs/src/_data/versions.json
          | xargs -I{LIST} curl -X POST -d {} "${{ secrets.NETLIFY_DOCS_BUILD_HOOK }}?trigger_branch={{LIST}}"
          # This workflow warns and then closes issues and PRs that have had no activity for a specified amount of time.
#
# You can adjust the behavior by modifying this file.
# For more information, see:
# https://github.com/actions/stale
name: Mark stale issues and pull requests

on:
  schedule:
  - cron: '31 22 * * *'

jobs:
  stale:

    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write

    steps:
    - uses: actions/stale@v9
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        days-before-issue-stale: 30
        days-before-pr-stale: 10
        days-before-close: 7
        stale-issue-message: 'Oops! It looks like we lost track of this issue. What do we want to do here? This issue will auto-close in 7 days without an update.'
        close-issue-message: 'This issue was auto-closed due to inactivity. While we wish we could keep responding to every issue, we unfortunately don''t have the bandwidth and need to focus on high-value issues.'
        stale-pr-message: 'Hi everyone, it looks like we lost track of this pull request. Please review and see what the next steps are. This pull request will auto-close in 7 days without an update.'
        close-pr-message: 'This pull request was auto-closed due to inactivity. While we wish we could keep working on every request, we unfortunately don''t have the bandwidth to continue here and need to focus on other things. You can resubmit this pull request if you would like to continue working on it.'
        exempt-all-assignees: true
        exempt-issue-labels: accepted
        # int
        name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  webpack_plugin:
    name: Types (eslint-webpack-plugin)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout eslint
        uses: actions/checkout@v4
        with:
          path: eslint

      - name: Checkout eslint-webpack-plugin
        uses: actions/checkout@v4
        with:
          repository: webpack-contrib/eslint-webpack-plugin
          path: webpack

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install Packages (eslint)
        working-directory: eslint
        run: npm install

      - name: Install Packages (eslint-webpack-plugin)
        working-directory: webpack
        run: |
          npm install
          npm install ../eslint

      - name: Run TSC
        working-directory: webpack
        run: npm run lint:types

  neostandard:
    name: Types (neostandard)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout eslint
        uses: actions/checkout@v4
        with:
          path: eslint

      - name: Checkout neostandard
        uses: actions/checkout@v4
        with:
          repository: neostandard/neostandard
          path: neostandard

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install Packages (eslint)
        working-directory: eslint
        run: npm install

      - name: Install Packages (neostandard)
        working-directory: neostandard
        run: |
          npm install
          npm install ../eslint

      - name: Run TSC
        working-directory: neostandard
        run: npm run check:tsc

  eslint-flat-config-utils:
    name: Types (eslint-flat-config-utils)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout eslint
        uses: actions/checkout@v4
        with:
          path: eslint

      - name: Checkout eslint-flat-config-utils
        uses: actions/checkout@v4
        with:
          repository: antfu/eslint-flat-config-utils
          path: antfu

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install Packages (eslint)
        working-directory: eslint
        run: npm install

      - name: Install Packages (neostandard)
        working-directory: antfu
        run: |
          npm install
          npm install ../eslint

      - name: Run TSC
        working-directory: antfu
        run: npm run typecheck

  eslint-visitor-keys:
    name: Types (eslint-visitor-keys)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout eslint
        uses: actions/checkout@v4
        with:
          path: eslint

      - name: Checkout eslint/js
        uses: actions/checkout@v4
        with:
          repository: eslint/js
          path: eslint-js

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install Packages (eslint)
        working-directory: eslint
        run: npm install

      - name: Update package.json eslint-visitor-keys
        uses: restackio/update-json-file-action@2.1
        with:
          file: eslint-js/packages/eslint-visitor-keys/package.json
          fields: '{"scripts.prepare": "npm run build:cjs"}'

      - name: Install Packages (eslint/js)
        working-directory: eslint-js
        run: |
          npm install
          npm install ../eslint

      - name: Run TSC
        working-directory: eslint-js
        run: npm run build:types --workspace eslint-visitor-keys

  are-the-types-wrong:
    name: Are the types wrong?
    runs-on: ubuntu-latest
    steps:
      - name: Checkout eslint
        uses: actions/checkout@v4
        with:
          path: eslint

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install Packages
        working-directory: eslint
        run: npm install

      - name: Check validity of type definitions
        working-directory: eslint
        run: npm run lint:types
